dati6:
a=50

b1 = 0.07
b2 = 0.06
#verticali
#b1 = 0.01
#b2 = 0

mean1 = (0, 0)
cov1 = [[b1,b2], [b2,b1]]
np.random.seed(0)
x1 = np.random.multivariate_normal(mean1, cov1, a)

#mean2 = (1,0)
#mean2 = (0.6, -0.7) #paralleli
mean2 = (0.8,-0.6)
cov2 = [[b1,b2], [b2,b1]]
np.random.seed(1)
x2 = np.random.multivariate_normal(mean2, cov2, a)




dati7:

a = 50

# diagonale
b1 = 0.07
b2 = 0.06
#verticali
#b1 = 0.01
#b2 = 0

mean1 = (0, 0)
cov1 = [[b1,b2], [b2,b1]]
np.random.seed(0)
x1 = np.random.multivariate_normal(mean1, cov1, a)

#mean2 = (1,0)
#mean2 = (0.6, -0.7) #paralleli
mean2 = (0.8,-0.6)
cov2 = [[b1,b2], [b2,b1]]
np.random.seed(1)
x2 = np.random.multivariate_normal(mean2, cov2, a)


mean3 = (-0.8,-1.2)
cov3 = [[0.02,0], [0,0.02]]
np.random.seed(1)
x3 = np.random.multivariate_normal(mean3, cov3, a)



mean4 = (1,-1.7)
cov4 = [[0.02,0], [0,0.02]]
np.random.seed(2)
x4 = np.random.multivariate_normal(mean4, cov4, a)






dati9:


		
a = 50

# diagonale
b1 = 0.07
b2 = 0.06
#verticali
#b1 = 0.01
#b2 = 0

mean1 = (0, 0)
cov1 = [[b1+0.1,b2], [b2,b1]]
np.random.seed(70)
x1 = np.random.multivariate_normal(mean1, cov1, a)

#mean2 = (1,0)
#mean2 = (0.6, -0.7) #paralleli
mean2 = (0.8,-0.6)
cov2 = [[b1,b2], [b2,b1]]
np.random.seed(10)
x2 = np.random.multivariate_normal(mean2, cov2, a)


mean3 = (-0.8,-1.2)
cov3 = [[0.02,0], [0,0.02]]
np.random.seed(10)
x3 = np.random.multivariate_normal(mean3, cov3, a)



mean4 = (1,-1.7)
cov4 = [[0.04,0], [0,0.1]]
np.random.seed(20)
x4 = np.random.multivariate_normal(mean4, cov4, a)

			



dati10:

a = 50

# diagonale
b1 = 0.07
b2 = 0.06

mean1 = (0, 0)
cov1 = [[b1,b2+0.1], [b2,b1]]
np.random.seed(30)
x1 = np.random.multivariate_normal(mean1, cov1, a)

#mean2 = (1,0)
#mean2 = (0.6, -0.7) #paralleli
mean2 = (0.8,-0.6)
cov2 = [[b1,b2], [b2,b1]]
np.random.seed(30)
x2 = np.random.multivariate_normal(mean2, cov2, a)


mean3 = (-0.8,-1.6)
cov3 = [[0.02,0], [0,0.02]]
np.random.seed(7)
x3 = np.random.multivariate_normal(mean3, cov3, a)



mean4 = (0,-2.5)
cov4 = [[0.04,0], [0,0.1]]
np.random.seed(8)
x4 = np.random.multivariate_normal(mean4, cov4, a)

