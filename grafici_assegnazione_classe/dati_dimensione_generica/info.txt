makecircles2:
dat = datasets.make_circles(n_samples=100,noise=0.05,random_state=0,factor=0.5)

gaussian1_3D:
b=0.02
a=50
mean1 = (0, 0)
cov1 = [[b,0], [0,b]]
np.random.seed(0)
x1 = np.random.multivariate_normal(mean1, cov1, a)
mean2 = (1,0)
cov2 = [[b,0], [0,b]]
np.random.seed(1)
x2 = np.random.multivariate_normal(mean2, cov2, a)
#3D
dim3_1 = np.random.normal(0, 1, len(x1))
dim3_2 = np.random.normal(0, 1, len(x2))
X1 = np.hstack((x1[:,0].reshape((len(x1),1)),x1[:,1].reshape((len(x1),1)),dim3_1.reshape((len(x1),1))))
X2 = np.hstack((x2[:,0].reshape((len(x2),1)),x2[:,1].reshape((len(x2),1)),dim3_2.reshape((len(x2),1))))
X = np.vstack([X1,X2])

makeblobs2_3D:
dat = datasets.make_blobs(n_samples=[50,50],n_features=3,cluster_std=1.2,random_state=1)

makeblobs_3D:
dat = datasets.make_blobs(n_samples=[30,30,30,30,30],n_features=3,cluster_std=1,random_state=1)

makemoons_2:
dat = datasets.make_moons(n_samples=150,noise=0.07,random_state=10)

makemoons1:
dat =dat = datasets.make_moons(n_samples=100,noise=0.07,random_state=20)


dati1:
a = 50

# diagonale
b1 = 0.07
b2 = 0.06
#verticali
#b1 = 0.01
#b2 = 0

mean1 = (0, 0)
cov1 = [[b1,b2+0.1], [b2,b1]]
np.random.seed(30)
x1 = np.random.multivariate_normal(mean1, cov1, a)

#mean2 = (1,0)
#mean2 = (0.6, -0.7) #paralleli
mean2 = (0.8,-0.6)
cov2 = [[b1,b2], [b2,b1]]
np.random.seed(30)
x2 = np.random.multivariate_normal(mean2, cov2, a)


mean3 = (-0.8,-1.6)
cov3 = [[0.02,0], [0,0.02]]
np.random.seed(7)
x3 = np.random.multivariate_normal(mean3, cov3, a)



mean4 = (0,-2.5)
cov4 = [[0.04,0], [0,0.1]]
np.random.seed(8)
x4 = np.random.multivariate_normal(mean4, cov4, a)




